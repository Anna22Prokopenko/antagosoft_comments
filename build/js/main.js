window.addEventListener("load",function(){function e(){m=Math.round(100*Math.random()),a=Math.round(100*Math.random()),o=Math.round(100*Math.random()),i.innerHTML=m,d.innerHTML=a,_.innerHTML=o,l.style.boxShadow="inset "+m*l.offsetWidth/100+"px 0px 0px #b1e19b",c.style.boxShadow="inset "+a*c.offsetWidth/100+"px 0px 0px #ace2f8",r.style.boxShadow="inset "+o*r.offsetWidth/100+"px 0px 0px #ace2f8",s=parseInt(i.innerHTML)+parseInt(d.innerHTML)+parseInt(_.innerHTML),u.innerHTML=s}function t(){E.innerHTML=g.length}function n(){var e,n=document.getElementsByClassName("js-commentsForm__name")[0].value,s=f,m=document.createElement("div");m.className="col span_12 c-comments__item js-comment__item";var a=document.createElement("div");a.innerHTML=n,a.className="c-comments__name";var o=document.createElement("div");o.innerHTML=s,o.className="c-comments__date",(e=document.createElement("div")).innerHTML=C.value,e.className="c-comments__text";var l=document.getElementsByClassName("js-comment__item");0!=n.length?0!=C.value.length?(N.insertBefore(m,l[0]),m.appendChild(a),m.appendChild(o),m.appendChild(e),t(),C.value=""):(C.placeholder="You have not written any text for comment here!",C.value=""):(C.placeholder="Yor forgot to write your name!",C.value="")}var s,m,a,o,l=document.getElementsByClassName("js-services__item1")[0],c=document.getElementsByClassName("js-services__item2")[0],r=document.getElementsByClassName("js-services__item3")[0],i=(document.getElementsByClassName("js-services__overall")[0],document.getElementsByClassName("js-services__quantity1")[0]),d=document.getElementsByClassName("js-services__quantity2")[0],_=document.getElementsByClassName("js-services__quantity3")[0],u=document.getElementsByClassName("js-overall__quantity")[0];c.offsetWidth;window.onload=e,setInterval(e,3500);var v=document.getElementsByClassName("js-commentsControl__like_btn")[0],y=document.getElementsByClassName("js-commentsControl__like")[0];v.addEventListener("click",function(e){e.preventDefault(),y.innerHTML=parseInt(y.innerHTML)+1});var g=(N=document.getElementsByClassName("js-comments")[0]).getElementsByClassName("js-comment__item"),E=document.getElementsByClassName("js-commentsControl__quantity")[0];t();var C=document.getElementsByClassName("js-commentsForm__text")[0],h=document.getElementsByClassName("js-commentsForm__send")[0],N=document.getElementsByClassName("js-comments")[0];h.addEventListener("click",function(){n(),console.log("ok")});var f=new Date,p=f.getDate(),B=f.getMonth()+1,j=f.getFullYear();p<10&&(p="0"+p),B<10&&(B="0"+B),f=B+" / "+p+" / "+j;var M=document.getElementById("lastcomments"),L=document.getElementById("allcomments");M.addEventListener("click",function(){var e=document.getElementsByClassName("js-comment__item");if(e.length>2){for(var t=2;t<e.length;t++)e[t].style.display="none";M.className="c-commentsControl__last--active",L.className="c-commentsControl__all--notactive"}}),L.addEventListener("click",function(){var e=document.getElementsByClassName("js-comment__item");if(e.length>2){for(var t=0;t<e.length;t++)e[t].style.display="block";L.className="c-commentsControl__all--active",M.className="c-commentsControl__last--notactive"}})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
